{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://to-do-list/./src/style.css","webpack://to-do-list/./node_modules/css-loader/dist/runtime/api.js","webpack://to-do-list/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://to-do-list/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://to-do-list/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://to-do-list/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://to-do-list/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://to-do-list/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://to-do-list/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://to-do-list/webpack/bootstrap","webpack://to-do-list/./src/Project.js","webpack://to-do-list/webpack/runtime/compat get default export","webpack://to-do-list/webpack/runtime/define property getters","webpack://to-do-list/webpack/runtime/global","webpack://to-do-list/webpack/runtime/hasOwnProperty shorthand","webpack://to-do-list/webpack/runtime/publicPath","webpack://to-do-list/webpack/runtime/nonce","webpack://to-do-list/./src/ProjectFunctions.js","webpack://to-do-list/./src/ToDo.js","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://to-do-list/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://to-do-list/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://to-do-list/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://to-do-list/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://to-do-list/./node_modules/date-fns/locale/en-US.mjs","webpack://to-do-list/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://to-do-list/./node_modules/date-fns/constants.mjs","webpack://to-do-list/./node_modules/date-fns/toDate.mjs","webpack://to-do-list/./node_modules/date-fns/startOfDay.mjs","webpack://to-do-list/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://to-do-list/./node_modules/date-fns/constructFrom.mjs","webpack://to-do-list/./node_modules/date-fns/getDayOfYear.mjs","webpack://to-do-list/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://to-do-list/./node_modules/date-fns/startOfYear.mjs","webpack://to-do-list/./node_modules/date-fns/startOfWeek.mjs","webpack://to-do-list/./node_modules/date-fns/startOfISOWeek.mjs","webpack://to-do-list/./node_modules/date-fns/getISOWeekYear.mjs","webpack://to-do-list/./node_modules/date-fns/getISOWeek.mjs","webpack://to-do-list/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://to-do-list/./node_modules/date-fns/getWeekYear.mjs","webpack://to-do-list/./node_modules/date-fns/getWeek.mjs","webpack://to-do-list/./node_modules/date-fns/startOfWeekYear.mjs","webpack://to-do-list/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://to-do-list/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://to-do-list/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://to-do-list/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://to-do-list/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://to-do-list/./node_modules/date-fns/isValid.mjs","webpack://to-do-list/./node_modules/date-fns/isDate.mjs","webpack://to-do-list/./node_modules/date-fns/format.mjs","webpack://to-do-list/./node_modules/date-fns/parseISO.mjs","webpack://to-do-list/./src/dateBase.js","webpack://to-do-list/./src/style.css?7163","webpack://to-do-list/./src/index.js","webpack://to-do-list/./src/Note.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    display: flex;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    padding: 0;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\nh1, h2, h3, h4 {\n    margin: 0;\n    padding: 0;\n}\n\nul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\nli {\n    margin-bottom: 10px;\n    display: flex;\n    align-items: center;\n}\nli:first-child {\n    margin-top: 10px;\n}\n\nli > input, li > select, li>textarea {\n    margin-left: 10px;\n}\n\ntextarea, input, select {\n    font-family: inherit;\n    font-size: 13px;\n}\n\n.sidebar {\n    background-color: #dfdddd;\n    flex-basis: 300px;\n    \n    display: flex;\n    flex-direction: column;\n    position: sticky;\n}\n.sidebar > h2 {\n    padding-left: 2px;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    overflow-y: auto;\n    margin-top: 10px;\n}\n\n#addProject {\n    background-color:#292974;\n    font-size: large;\n    font-weight: bold;\n    border-radius: 10px;\n    color: white;\n    margin: 10px;\n    box-sizing: border-box;\n}\n\n#addProject:hover {\n    background-color: #171741;\n}\n\n.projectButton {\n    background-color: transparent;\n    font-size: large;\n    text-align: left;\n    border-width: 0;\n    padding: 5px 2px;\n}\n\n.projectButton:hover {\n    background-color: #aaaaaa;\n}\n\ndialog {\n    border-radius: 15px;\n    border: 3px solid #292974;\n}\n\n#newProjectSubmit, #newToDoSubmit {\n    background-color:#292974;\n    font-size: 13px;\n    font-weight: bold;\n    color: white;\n    margin: 10px;\n    box-sizing: border-box;\n}\n\n#newProjectSubmit:hover, #newToDoSubmit:hover {\n    background-color: #171741;\n}\n\n\n.mainContent {\n    flex-grow: 1;\n    overflow-y: auto;\n}\n.mainContent > h1 {\n    position: fixed;\n}\n\n.toDoContent {\n    display: grid;\n    grid-template-columns: 50px auto;\n    row-gap: 20px;\n}\n\n.toDoContent > button{\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    color: white;\n    font-size: 40px;\n    border-width: 0px;\n    background-color: #292974;\n    box-shadow: 3px 3px 5px black;\n    position: fixed;\n    top: 40px;\n}\n.toDoContent > button:hover {\n    background-color: #171741;\n\n}\n\n.toDoContent > div {\n    grid-column: 2 / 3;\n    border: 3px solid black;\n    background-color: #d8d8d8;\n    width: 400px;\n    justify-self: center;\n    border-radius: 10px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto auto 1fr;\n}\n\n.toDoContent > div > div {\n    background-color: #acacac;\n    display: grid;\n    grid-column: 1 / 3;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    grid-auto-flow: column;\n}\n\n.toDoEdit {\n    padding: 0;\n    background-color: transparent;\n    border-width: 0px;\n    justify-self: end;\n    grid-row: 3 / 4;\n    grid-column: 2 / 3;\n}\n\n.toDoDueDate {\n    grid-column: 1 / 2;\n    grid-row: 3 / 4;\n}\n\n\n.toDoRemove {\n    background-color: transparent;\n    width: 20px;\n    height: 20px;\n    font-size: 15px;\n    border-width: 0px;\n    justify-self: end;\n}\n\n.toDoRemove:hover {\n    background-color: rgb(194, 194, 194);\n}\n\n.toDoEdit > img {\n    width: 20px;\n    height: auto;\n}\n.toDoEdit:hover {\n    background-color: rgb(184, 184, 184);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,aAAa;IACb,YAAY;IACZ,SAAS;IACT,UAAU;IACV,6EAA6E;AACjF;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,gBAAgB;IAChB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,iBAAiB;;IAEjB,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;AACA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,wBAAwB;IACxB,gBAAgB;IAChB,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,gBAAgB;IAChB,gBAAgB;IAChB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,mBAAmB;IACnB,yBAAyB;AAC7B;;AAEA;IACI,wBAAwB;IACxB,eAAe;IACf,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;AAC7B;;;AAGA;IACI,YAAY;IACZ,gBAAgB;AACpB;AACA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,6BAA6B;IAC7B,eAAe;IACf,SAAS;AACb;AACA;IACI,yBAAyB;;AAE7B;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,yBAAyB;IACzB,YAAY;IACZ,oBAAoB;IACpB,mBAAmB;IACnB,aAAa;IACb,gCAAgC;IAChC,iCAAiC;AACrC;;AAEA;IACI,yBAAyB;IACzB,aAAa;IACb,kBAAkB;IAClB,8BAA8B;IAC9B,2BAA2B;IAC3B,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,6BAA6B;IAC7B,iBAAiB;IACjB,iBAAiB;IACjB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB;;;AAGA;IACI,6BAA6B;IAC7B,WAAW;IACX,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,oCAAoC;AACxC\",\"sourcesContent\":[\"body {\\n    display: flex;\\n    height: 100vh;\\n    width: 100vw;\\n    margin: 0;\\n    padding: 0;\\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n}\\n\\nh1, h2, h3, h4 {\\n    margin: 0;\\n    padding: 0;\\n}\\n\\nul {\\n    list-style: none;\\n    padding: 0;\\n    margin: 0;\\n}\\n\\nli {\\n    margin-bottom: 10px;\\n    display: flex;\\n    align-items: center;\\n}\\nli:first-child {\\n    margin-top: 10px;\\n}\\n\\nli > input, li > select, li>textarea {\\n    margin-left: 10px;\\n}\\n\\ntextarea, input, select {\\n    font-family: inherit;\\n    font-size: 13px;\\n}\\n\\n.sidebar {\\n    background-color: #dfdddd;\\n    flex-basis: 300px;\\n    \\n    display: flex;\\n    flex-direction: column;\\n    position: sticky;\\n}\\n.sidebar > h2 {\\n    padding-left: 2px;\\n}\\n\\n.projects {\\n    display: flex;\\n    flex-direction: column;\\n    flex-grow: 1;\\n    overflow-y: auto;\\n    margin-top: 10px;\\n}\\n\\n#addProject {\\n    background-color:#292974;\\n    font-size: large;\\n    font-weight: bold;\\n    border-radius: 10px;\\n    color: white;\\n    margin: 10px;\\n    box-sizing: border-box;\\n}\\n\\n#addProject:hover {\\n    background-color: #171741;\\n}\\n\\n.projectButton {\\n    background-color: transparent;\\n    font-size: large;\\n    text-align: left;\\n    border-width: 0;\\n    padding: 5px 2px;\\n}\\n\\n.projectButton:hover {\\n    background-color: #aaaaaa;\\n}\\n\\ndialog {\\n    border-radius: 15px;\\n    border: 3px solid #292974;\\n}\\n\\n#newProjectSubmit, #newToDoSubmit {\\n    background-color:#292974;\\n    font-size: 13px;\\n    font-weight: bold;\\n    color: white;\\n    margin: 10px;\\n    box-sizing: border-box;\\n}\\n\\n#newProjectSubmit:hover, #newToDoSubmit:hover {\\n    background-color: #171741;\\n}\\n\\n\\n.mainContent {\\n    flex-grow: 1;\\n    overflow-y: auto;\\n}\\n.mainContent > h1 {\\n    position: fixed;\\n}\\n\\n.toDoContent {\\n    display: grid;\\n    grid-template-columns: 50px auto;\\n    row-gap: 20px;\\n}\\n\\n.toDoContent > button{\\n    border-radius: 50%;\\n    width: 50px;\\n    height: 50px;\\n    color: white;\\n    font-size: 40px;\\n    border-width: 0px;\\n    background-color: #292974;\\n    box-shadow: 3px 3px 5px black;\\n    position: fixed;\\n    top: 40px;\\n}\\n.toDoContent > button:hover {\\n    background-color: #171741;\\n\\n}\\n\\n.toDoContent > div {\\n    grid-column: 2 / 3;\\n    border: 3px solid black;\\n    background-color: #d8d8d8;\\n    width: 400px;\\n    justify-self: center;\\n    border-radius: 10px;\\n    display: grid;\\n    grid-template-columns: auto auto;\\n    grid-template-rows: auto auto 1fr;\\n}\\n\\n.toDoContent > div > div {\\n    background-color: #acacac;\\n    display: grid;\\n    grid-column: 1 / 3;\\n    grid-template-columns: 1fr 1fr;\\n    grid-template-rows: 1fr 1fr;\\n    grid-auto-flow: column;\\n}\\n\\n.toDoEdit {\\n    padding: 0;\\n    background-color: transparent;\\n    border-width: 0px;\\n    justify-self: end;\\n    grid-row: 3 / 4;\\n    grid-column: 2 / 3;\\n}\\n\\n.toDoDueDate {\\n    grid-column: 1 / 2;\\n    grid-row: 3 / 4;\\n}\\n\\n\\n.toDoRemove {\\n    background-color: transparent;\\n    width: 20px;\\n    height: 20px;\\n    font-size: 15px;\\n    border-width: 0px;\\n    justify-self: end;\\n}\\n\\n.toDoRemove:hover {\\n    background-color: rgb(194, 194, 194);\\n}\\n\\n.toDoEdit > img {\\n    width: 20px;\\n    height: auto;\\n}\\n.toDoEdit:hover {\\n    background-color: rgb(184, 184, 184);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import {ToDo} from \"./ToDo\";\nimport { Note } from \"./Note\";\n\nfunction Project(input) {\n    let project = [];\n    let name = input;\n\n    function addObject(object) {\n        if (object.getType() != \"ToDo\" || project.length == 0) {\n            project.push(object);\n        }\n        else {\n            for (let i = 0; i < project.length; i++) {\n                console.log(object.priority.getProperty());\n                if (project[i].getType() != \"ToDo\" || object.priority.getProperty() >= project[i].priority.getProperty()) {\n                    project.splice(i, 0, object);\n                    break;\n                }\n                else if (project.length - 1 == i) {\n                    project.push(object);\n                }\n            }\n            \n        }\n        \n      \n    }\n\n    function removeObject(index) {\n        project = project.slice(0, index).concat(project.slice(index+1, project.length));\n    }\n\n    function getName() {\n        return name;\n    }\n\n    function changeName(input) {\n        if (typeof input != typeof \"string\") {\n            return false;\n        }\n        name = input;\n        return true;\n    }\n\n    function getProject() {\n        return project.slice();\n    }\n\n\n    \n\n    return {addObject, removeObject, getProject, changeName, getName};\n}\n\nexport {Project};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","import { Project } from \"./Project\";\n\nconst Main = (function Main() {\n    let projects = [Project(\"Default\")];\n\n    function addProject(project) {\n        projects.push(project);\n    }\n\n    function removeProject(index) {\n        projects = projects.slice(0, index).concat(projects.slice(index+1, projects.length));\n        \n    }\n\n    function getProject(index) {\n        return projects[index];\n    }\n\n    function getProjects() {\n        return projects.slice();\n    }\n\n    return {addProject, removeProject, getProject, getProjects};\n})();\n\nexport {Main};","\nfunction ToDoFeature(input=\"\") {\n    let property = input;\n\n    function getProperty() {\n        return property;\n    }\n    function setProperty(input='') {\n        property = input;\n    }\n\n    return {getProperty, setProperty}\n}\n\n\nfunction ToDo() {\n    let title, description, priority, dueDate;\n\n    title = ToDoFeature();\n    description = ToDoFeature();\n    priority = ToDoFeature();\n    dueDate = ToDoFeature();\n    function getType() {\n        return \"ToDo\";\n    }\n\n    return {title, description, priority, dueDate, getType};\n}\n\nexport {ToDoFeature, ToDo};","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { millisecondsInHour, millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  const timestamp = date.getTime();\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    const dirtyDate = new Date(timestamp + time);\n    // JS parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    const result = new Date(0);\n    result.setFullYear(\n      dirtyDate.getUTCFullYear(),\n      dirtyDate.getUTCMonth(),\n      dirtyDate.getUTCDate(),\n    );\n    result.setHours(\n      dirtyDate.getUTCHours(),\n      dirtyDate.getUTCMinutes(),\n      dirtyDate.getUTCSeconds(),\n      dirtyDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","//For ensuring that there is a base date for ToDo items\n\nimport { min } from \"date-fns\";\n\nconst addBaseDate = (function addBaseDate() {\n    const currentDate = new Date();\n    let date = currentDate.getDate();\n    let month = currentDate.getMonth() + 1;\n    const year = currentDate.getFullYear();\n    let hour = currentDate.getHours();\n    let minutes = currentDate.getMinutes();\n    if (date < 10) {\n        date = \"0\" + date;\n    }\n    if (month < 10) {\n        month = \"0\" + month;\n    }\n    if (hour < 10) {\n        hour = \"0\" + hour;\n    }\n    if (minutes < 10) {\n        minutes = \"0\" + minutes;\n    }\n\n    const dateTime = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minutes;\n    return dateTime;\n})();\n\nexport default addBaseDate;\n\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import {Main} from \"./ProjectFunctions\";\nimport { Note } from \"./Note\";\nimport { ToDo } from \"./ToDo\";\nimport { Project } from \"./Project\";\nimport {format, parseISO} from \"date-fns\";\nimport addBaseDate from \"./dateBase\";\nimport \"./style.css\"\nimport EditButton from \"./tag-edit-outline.svg\";\n\nfunction DOMHandling() {\n    const content = document.querySelector(\"#content\");\n    const sidebarProjects = document.querySelector(\".projects\");\n    const addProject = document.querySelector(\"#addProject\");\n    let newProjects = 1;\n    let projectIndex = 0;\n    const projectsDOM = [];\n    let currentProjectValue = 0;\n\n    //Add new ToDo to project stuff\n    const newToDoDialog = document.querySelector(\"#newToDo\");\n    const newToDoSubmit = document.querySelector(\"#newToDoSubmit\");\n    \n    ///Subsection deals with different note types\n    const noteType = document.querySelector(\"#type\");\n    const options = document.querySelector(\"form>ul\");\n    const priority = options.childNodes[2];\n    const dueDate = options.childNodes[3];\n    noteType.addEventListener(\"click\", (e) => {\n        if (e.target.value == \"note\" && options.childElementCount == 4) {\n            options.removeChild(priority);\n            options.removeChild(dueDate);\n        }\n        else if (e.target.value == \"toDo\" && options.childElementCount == 2) {\n            options.appendChild(priority);\n            options.appendChild(dueDate);\n        }\n    });\n    ///Subsection deals with form submission\n    const inputTitle = document.querySelector(\"#title\");\n    const inputDesc = document.querySelector(\"#desc\");\n    inputDesc.value = \"\";\n    const inputPri = document.querySelector(\"#pri\");\n    const inputDate = document.querySelector(\"#date\");\n    inputDate.min = addBaseDate;\n    newToDoSubmit.addEventListener('click', addToDoToDOM);\n    function addToDoToDOM(e) {\n        e.preventDefault();\n        if (inputTitle.value.trim() != \"\" && inputDesc.value.trim() != \"\" && (noteType.value == \"note\" || inputDate.value != \"\")) {\n            newToDoDialog.close();\n            let currentProject = Main.getProject(currentProjectValue);\n            if (noteType.value == \"note\") {\n                const note = Note();\n                note.title.setProperty(inputTitle.value);\n                note.description.setProperty(inputDesc.value);\n                currentProject.addObject(note);\n\n            }\n            else {\n                const toDo = ToDo();\n                toDo.title.setProperty(inputTitle.value);\n                toDo.description.setProperty(inputDesc.value);\n                toDo.priority.setProperty(inputPri.value);\n                toDo.dueDate.setProperty(format(parseISO(inputDate.value), \"PPpp\"));\n                currentProject.addObject(toDo);\n            }\n\n            inputTitle.value = \"\";\n            inputDesc.value = \"\";\n            inputPri.value = \"3\";\n            inputDate.value = \"\";\n            renderProject();\n        }\n    }\n\n    function startProject(index) {\n        projectsDOM[index].classList.add(\"toDoContent\");\n        const addToDo = document.createElement(\"button\");\n        addToDo.textContent = \"+\";\n        addToDo.addEventListener(\"click\", () => newToDoDialog.showModal());\n        projectsDOM[index].appendChild(addToDo);\n    }\n\n    //Render the contents of the projects\n    function renderProject() {\n        \n        const priorityMapper = {\"1\": \"Low\", \"2\": \"Medium\", \"3\": \"High\"};\n        projectsDOM[currentProjectValue].innerHTML = \"\";\n        startProject(currentProjectValue);\n        const toDos = Main.getProject(currentProjectValue).getProject();\n        for (let i = 0; i < toDos.length;i++) {\n            const toDoContainer = document.createElement(\"div\");\n            const toDoHeader = document.createElement(\"div\");\n            const toDoTitle = document.createElement(\"h2\");\n            const toDoPriority = document.createElement(\"h3\");\n            const toDoDescription = document.createElement(\"h3\");\n            const toDoDueDate = document.createElement(\"h3\");\n            const toDoRemove = document.createElement(\"button\");\n            const toDoEdit = document.createElement(\"button\");\n            const toDoEditIcon = new Image();\n            let mainProject = Main.getProject(currentProjectValue);\n            toDoEditIcon.src = EditButton;\n\n            toDoRemove.textContent = \"X\";\n            toDoRemove.classList.add(\"toDoRemove\");\n            toDoRemove.addEventListener(\"click\", () => {\n                mainProject.removeObject(i);\n                renderProject();\n            });\n\n            toDoEdit.classList.add(\"toDoEdit\");\n            toDoEdit.addEventListener(\"click\", (e) => {\n                inputTitle.value = toDos[i].title.getProperty();\n                inputDesc.value = toDos[i].description.getProperty();\n                newToDoDialog.showModal();\n                mainProject.removeObject(i);\n                renderProject();\n            });\n\n            toDoTitle.textContent = toDos[i].title.getProperty();\n            toDoDescription.textContent = toDos[i].description.getProperty();\n            if (toDos[i].getType() == \"ToDo\") {\n                toDoPriority.textContent = \"Priority: \" + priorityMapper[toDos[i].priority.getProperty()];\n                toDoDueDate.textContent = toDos[i].dueDate.getProperty();\n            }\n\n            toDoDueDate.classList.add(\"toDoDueDate\");\n            \n            toDoContainer.appendChild(toDoHeader);\n            toDoHeader.appendChild(toDoTitle);\n            toDoHeader.appendChild(toDoPriority);\n            toDoHeader.appendChild(toDoRemove);\n            toDoEdit.appendChild(toDoEditIcon);\n            toDoContainer.appendChild(toDoDescription);\n            toDoContainer.appendChild(toDoEdit);\n            toDoContainer.appendChild(toDoDueDate);\n\n            projectsDOM[currentProjectValue].appendChild(toDoContainer);\n        }\n    }\n\n    //Render the contents of the Sidebar\n    function renderSidebar() {\n        const projects = Main.getProjects();\n        for (let i = projects.length - newProjects; i < projects.length; i++) {\n            const projectButton = document.createElement(\"button\");\n            projectButton.classList.add(\"projectButton\");\n            projectButton.textContent = projects[i].getName();\n            projectButton.setAttribute(\"value\", projectIndex);\n            sidebarProjects.appendChild(projectButton);\n            projectButton.addEventListener(\"click\", loadProject);\n\n            const deleteProject = document.createElement(\"button\");\n            deleteProject.addEventListener(\"click\", () => {\n                Main.removeProject(i);\n                renderSidebar();\n            });\n            deleteProject.textContent = \"X\";\n            projectButton.appendChild(deleteProject);\n            \n            projectsDOM.push(document.createElement(\"div\"));\n            startProject(projectsDOM.length-1);\n            projectIndex++;\n        }\n        newProjects = 0;\n    }\n    \n    function removeProject() {\n        content.innerHTML = '';\n    }\n    function appendProject(e) {\n        content.appendChild(projectsDOM[e.target.value]);\n    }\n\n    function loadProject(e) {\n        removeProject();\n        appendProject(e);\n        currentProjectValue = e.target.value;\n    }\n\n    \n\n    //Add new project to sidebar stuff\n    const newProjectDialog = document.querySelector(\"#newProject\");\n    const newProjectSubmit = document.querySelector(\"#newProjectSubmit\");\n    addProject.addEventListener(\"click\", (e) => newProjectDialog.showModal());\n    const inputName = document.querySelector(\"#name\");\n    newProjectSubmit.addEventListener(\"click\", addProjectToDOM);\n    function addProjectToDOM(e) {\n        e.preventDefault();\n        Main.addProject(Project(inputName.value));\n        inputName.value = \"\";\n        newProjectDialog.close();\n        newProjects++;\n        renderSidebar();\n    }\n\n    \n    renderSidebar();\n    \n}\n\nDOMHandling();","import { ToDoFeature } from \"./ToDo\";\n\nfunction Note() {\n    let title, description;\n\n    title = ToDoFeature();\n    description = ToDoFeature();\n    function getType() {\n        return \"Note\";\n    }\n    return {title, description, getType};\n}\n\nexport {Note};"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Project","input","project","name","addObject","object","getType","console","log","priority","getProperty","removeObject","slice","getProject","changeName","getName","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","test","replace","p","nc","Main","projects","addProject","removeProject","getProjects","ToDoFeature","property","setProperty","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","findIndex","findKey","valueCallback","rest","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","millisecondsInHour","toDate","argument","argStr","Date","constructor","NaN","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","constructFrom","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","cleanDate","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","matched","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseDateUnit","parseTimeUnit","parseFloat","daysInMonths","isLeapYearIndex","currentDate","hour","locals","sidebarProjects","newProjects","projectIndex","projectsDOM","currentProjectValue","newToDoDialog","newToDoSubmit","noteType","childNodes","dueDate","addEventListener","childElementCount","inputTitle","inputDesc","inputPri","inputDate","startProject","classList","add","addToDo","textContent","showModal","renderProject","priorityMapper","innerHTML","toDos","toDoContainer","toDoHeader","toDoTitle","toDoPriority","toDoDescription","toDoDueDate","toDoRemove","toDoEdit","toDoEditIcon","Image","mainProject","title","description","renderSidebar","projectButton","loadProject","deleteProject","appendProject","min","preventDefault","trim","close","currentProject","note","Note","toDo","ToDo","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","isToken","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","format","_message","subject","message","warn","includes","warnOrThrowProtectedError","formatter","additionalDigits","dateStrings","dateString","split","timeString","substr","exec","splitDateString","parseYearResult","regex","RegExp","captures","restDateString","century","parseYear","isWeekDate","_year","validateWeekDate","isoWeekYear","getUTCDay","setUTCDate","getUTCDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","max","parseDate","timestamp","seconds","validateTime","parseTime","dirtyDate","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","_hours","validateTimezone","parseTimezone","parseISO","newProjectDialog","newProjectSubmit","inputName","DOMHandling"],"sourceRoot":""}